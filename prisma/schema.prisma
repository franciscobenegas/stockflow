// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Rol {
  USER
  ADMIN
}

model User{
  id String    @id @default(uuid())
  email String @unique
  username String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rol Rol @default(ADMIN)
}

model Cliente{
  id            String @id @default(uuid())
  nombre        String 
  ruc           String 
  telefono      String
  email         String
  direccion     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  userId        String
  tipoCliente   tipoCliente   @relation(fields: [tipoClienteId], references: [id])
  tipoClienteId Int          // Llave foránea al tipo de cliente

  @@index([nombre,ruc])
  @@index([tipoClienteId])
}

model Producto {
  id            Int        @id @default(autoincrement())
  nombre        String
  codigoBarra   String?
  codigoSKU     String?
  descripcion   String?
  precioCompra  Float?
  preioVenta    Float?
  imagen        String?
  cantidad      Int
  cantidadMinima Int
  cantidadMaxima Int
  categoria     Categoria? @relation(fields: [categoriaId], references: [id])
  categoriaId   Int?
  medida        Medidas? @relation(fields: [medidaId], references: [id])
  medidaId      Int?
  proveedor     Proveedor? @relation(fields: [proveedorId], references: [id])
  proveedorId   Int?
  marca         Marca      @relation(fields: [marcaId], references: [id])
  marcaId       Int
  usuarioId     String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([categoriaId])
  @@index([proveedorId])
  @@index([usuarioId])
  @@index([marcaId])
  @@index([medidaId])
}

model Categoria {
  id          Int         @id @default(autoincrement())
  nombre      String
  productos   Producto[]
  usuarioId   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
}

model Medidas{
  id Int  @id @default(autoincrement())
  nombre String
  productos   Producto[]
  usuarioId   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
}


model Proveedor {
  id          Int         @id @default(autoincrement())
  nombre      String
  contacto    String?
  productos   Producto[]
  usuarioId   String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime   @updatedAt
}

model Marca {
  id          Int @id @default(autoincrement())
  nombre      String @unique
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  usuarioId   String
  producto    Producto[] // Relación uno a muchos con productos
}

model tipoCliente {
  id          Int         @id @default(autoincrement()) // Identificador único
  name        String     // Nombre del tipo de cliente (por ejemplo, "Premium", "Básico")
  updatedAt   DateTime   @updatedAt
  usuarioId   String
  cliente     Cliente[]  // Relación uno a muchos con clientes
}



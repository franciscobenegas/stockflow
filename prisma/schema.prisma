// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Rol {
  USER
  ADMIN
}

model User{
  id String    @id @default(uuid())
  email String @unique
  username String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rol Rol @default(ADMIN)
}

model Cliente{
  id String @id @default(uuid())
  nombre String 
  ruc String 
  telefono String
  email String
  direccion String
  tipo String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String
  
  @@index([nombre,ruc])
}

model Producto {
  id            Int        @id @default(autoincrement())
  nombre        String
  codigoBarra   String?
  codigoSKU     String?
  descripcion   String?
  precioCompra  Float?
  preioVenta    Float?
  imagen        String?
  cantidad      Int
  cantidadMinima Int
  cantidadMaxima Int
  categoria     Categoria? @relation(fields: [categoriaId], references: [id])
  categoriaId   Int?
  proveedor     Proveedor? @relation(fields: [proveedorId], references: [id])
  proveedorId   Int?
  usuarioId     String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([categoriaId])
  @@index([proveedorId])
  @@index([usuarioId])
}

model Categoria {
  id          Int         @id @default(autoincrement())
  nombre      String
  productos   Producto[]
  usuarioId   String
  createdAt   DateTime    @default(now())
}


model Proveedor {
  id          Int         @id @default(autoincrement())
  nombre      String
  contacto    String?
  productos   Producto[]
  usuarioId   String
  createdAt   DateTime    @default(now())
}

